plugins {
    id 'com.android.library'
    id 'maven-publish'
}

// 定义版本号
def sdkVersion = '0.4.16'  // 将版本号存储在变量中
version = sdkVersion  // 将版本号应用到项目版本

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

android {
    namespace 'cn.xmplus.sdk'
    compileSdk 28

    defaultConfig {
        minSdk 22

        //noinspection ExpiredTargetSdkVersion
        targetSdk 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // 将版本号作为BuildConfig的字段导出
        buildConfigField "String", "SDK_VERSION", "\"${sdkVersion}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

def getReleaseRepositoryUrl() {
    return "https://packages.aliyun.com/maven/repository/2106468-release-OXp1MH/"
}

def getSnapshotRepositoryUrl() {
    return "https://packages.aliyun.com/maven/repository/2106468-snapshot-Gf5v5S/"
}

def getRepositoryUrl() {
    if (version != null && version.toLowerCase().endsWith("snapshot")) {
        return getSnapshotRepositoryUrl()
    } else {
        return getReleaseRepositoryUrl()
    }
}

publishing {
    publications {
        PublishAndroidAssetLibrary(MavenPublication) {
            groupId 'cn.xmplus.sdk'
            artifactId 'surveysdk'
            version version
            afterEvaluate {
                artifact bundleReleaseAar
            }
            artifact generateSourcesJar

            pom.withXml {
                //在pom.xml添加依赖关系
                def dependenciesNode = asNode().appendNode('dependencies')
                //拿到所有编译时的依赖
                def dependenciesList = []
                dependenciesList.addAll(configurations.implementation.allDependencies)
                dependenciesList.addAll(configurations.api.allDependencies)
                dependenciesList.each {
                    if (null != it.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'compile')
                    }
                }

            }
        }
    }
}

publishing {
    repositories {
        maven {
            url getRepositoryUrl()
            credentials {
                username = "60af7505395ee4198de22f23"
                password = "VmLc)]llUKi("
            }
        }
    }
}

